package com.iudigital.gusto.supremo.view;

import com.iudigital.gusto.supremo.controller.IngredienteController;
import com.iudigital.gusto.supremo.controller.UnidadMedidaController;
import com.iudigital.gusto.supremo.domain.Ingrediente;
import com.iudigital.gusto.supremo.domain.UnidadMedida;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MainWindow extends javax.swing.JFrame {

    private final IngredienteController ingredienteController;
    private final UnidadMedidaController unidadMedidaController;
    private static final String[] COLUMNS = {"ID", "ID INGREDIENTE", "INGREDIENTE", "NOMBRE", 
            "CANTIDAD INVENTARIO", "CANTIDAD MÍNIMA"};
    private static final String UNIDADES_MEDIDAS = "-- Unidades de Medida --";
    private static final String SELECCIONE = "-- SELECCIONE --";
    
    
    public MainWindow() {
        initComponents();
        
        ingredienteController = new IngredienteController();
        unidadMedidaController = new UnidadMedidaController();
        txtIdIngrediente.setEditable(false);
        listIngredientes();
        listUnidadesMedidas();
        addListener();
    }
    
    private void listIngredientes(){
        cbxIngredientes.removeAllItems();
        Ingrediente ingrediente1 = new Ingrediente();
        ingrediente1.setNombre(SELECCIONE);
        cbxIngredientes.addItem(ingrediente1);
        
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        for (String COLUMN : COLUMNS) {
            defaultTableModel.addColumn(COLUMN);
        }
        
        tblIngredientes.setModel(defaultTableModel);
        
        try {
            List<Ingrediente> ingredientes = ingredienteController.obtenerIngredientes();
            if (ingredientes.isEmpty()){
                return;
            }
            defaultTableModel.setRowCount(ingredientes.size());
            int row = 0;
            for (Ingrediente ingrediente : ingredientes){
                defaultTableModel.setValueAt(ingrediente.getId(), row, 0);
                defaultTableModel.setValueAt(ingrediente.getIdUnidadMedida(), row, 1);
                defaultTableModel.setValueAt(ingrediente.getUnidadMedidaNombre(), row, 2);
                defaultTableModel.setValueAt(ingrediente.getNombre(), row, 3);
                defaultTableModel.setValueAt(ingrediente.getCantidadInventario(), row, 4);
                defaultTableModel.setValueAt(ingrediente.getCantidadMinima(), row, 5);
                
                row++;
                
                cbxIngredientes.addItem(ingrediente);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    
    public void listUnidadesMedidas() {
        cbxUnidadMedida.removeAllItems();
        UnidadMedida unidadMedida1 = new UnidadMedida();
        unidadMedida1.setNombre(UNIDADES_MEDIDAS);
        cbxUnidadMedida.addItem(unidadMedida1);
        try {
            List<UnidadMedida> unidadesMedidas = unidadMedidaController.getUnidadesMedidas();
            for (UnidadMedida unidadMedida : unidadesMedidas){
                cbxUnidadMedida.addItem(unidadMedida);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    
    private void addListener(){
        cbxIngredientes.addItemListener(event -> {
           Ingrediente selectedIngrediente = (Ingrediente) event.getItem();
           if (selectedIngrediente.getNombre().equals(SELECCIONE)){
               txtIdIngrediente.setText("");
               txtIdUnidadMedidaEdit.setText("");
               txtUnidadMedidaNombreEdit.setText("");
               txtNombreEdit.setText("");
               txtCantidadInventarioEdit.setText("");
               txtCantidadMinimaEdit.setText("");
           } else {
               txtIdIngrediente.setText(String.valueOf(selectedIngrediente.getId()));
               txtIdUnidadMedidaEdit.setText(selectedIngrediente.getIdUnidadMedida());
               txtUnidadMedidaNombreEdit.setText(selectedIngrediente.getUnidadMedidaNombre());
               txtNombreEdit.setText(selectedIngrediente.getNombre());
               txtCantidadInventarioEdit.setText(String.valueOf(selectedIngrediente.getCantidadInventario()));
               txtCantidadMinimaEdit.setText(String.valueOf(selectedIngrediente.getCantidadMinima()));
           }
        });
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxUnidadMedida = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JTextField();
        txtCantidadInventario = new javax.swing.JTextField();
        txtCantidadMinima = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIngredientes = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        cbxIngredientes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtIdIngrediente = new javax.swing.JTextField();
        txtIdUnidadMedidaEdit = new javax.swing.JTextField();
        txtUnidadMedidaNombreEdit = new javax.swing.JTextField();
        txtNombreEdit = new javax.swing.JTextField();
        txtCantidadInventarioEdit = new javax.swing.JTextField();
        txtCantidadMinimaEdit = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("INGREDIENTES GUSTO SUPREMO");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese los siguientes campos"));

        jLabel2.setText("UNIDAD DE MEDIDA");

        jLabel3.setText("NOMBRE");

        jLabel4.setText("CANTIDAD INVENTARIO");

        jLabel5.setText("CANTIDAD MÍNIMA");

        txtCantidadMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadMinimaActionPerformed(evt);
            }
        });

        btnSave.setText("GUARDAR");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxUnidadMedida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(txtCantidadInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCantidadMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(64, 64, 64))
        );

        tblIngredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblIngredientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("CREAR / LISTAR", jPanel2);

        jLabel6.setText("INGREDIENTES");

        jLabel7.setText("ID");

        btnUpdate.setText("ACTUALIZAR");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("ELIMINAR");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel8.setText("ID UNIDAD DE MEDIDA");

        jLabel9.setText("UNIDAD DE MEDIDA");

        jLabel10.setText("NOMBRE");

        jLabel11.setText("CANTIDAD INVENTARIO");

        jLabel12.setText("CANTIDAD MINIMA");

        txtUnidadMedidaNombreEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnidadMedidaNombreEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnUpdate)
                                    .addComponent(jLabel11))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addComponent(btnDelete)))))
                        .addGap(58, 58, 58)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtIdIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(txtIdUnidadMedidaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtUnidadMedidaNombreEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(txtNombreEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(44, 44, 44))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(txtCantidadInventarioEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(txtCantidadMinimaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel6)
                .addGap(37, 37, 37)
                .addComponent(cbxIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdUnidadMedidaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnidadMedidaNombreEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidadInventarioEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadMinimaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(44, 44, 44))
        );

        jTabbedPane1.addTab("ACTUALIZAR / ELIMINAR", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantidadMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadMinimaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadMinimaActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        if (cbxUnidadMedida.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida de la lista");
            cbxUnidadMedida.requestFocus();
            return;
        }
        
        if(txtNombre.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite un nombre");
            txtNombre.requestFocus();
            return;
        }
        
        if(txtCantidadInventario.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite la cantidad en inventario");
            txtCantidadInventario.requestFocus();
            return;
        }
        
        if(txtCantidadMinima.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite la cantidad mínima");
            txtCantidadMinima.requestFocus();
            return;
        }    
        
        try {
            Ingrediente ingrediente = new Ingrediente();

            ingrediente.setIdUnidadMedida(String.valueOf(cbxUnidadMedida.getSelectedIndex())); 
            ingrediente.setUnidadMedidaNombre(txtUnidadMedidaNombreEdit.getText().trim());
            ingrediente.setNombre(txtNombre.getText().trim());
            ingrediente.setCantidadInventario(Integer.parseInt(txtCantidadInventario.getText().trim()));
            ingrediente.setCantidadMinima(Integer.parseInt(txtCantidadMinima.getText().trim()));

            ingredienteController.crear(ingrediente);           
            
            cbxUnidadMedida.setSelectedIndex(-1);
            txtNombre.setText("");
            txtCantidadInventario.setText("");
            txtCantidadMinima.setText("");

            listIngredientes();
            
            JOptionPane.showMessageDialog(null, "Ingrediente creado correctamente");
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "No se pudo crear el ingrediente");
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        if(txtIdIngrediente.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Seleccione un ingrediente de la lista");
            txtIdIngrediente.requestFocus();
            return;
        }
        
        if(txtIdUnidadMedidaEdit.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite el id de la unidad de medida");
            txtIdUnidadMedidaEdit.requestFocus();
            return;
        }
        
        if(txtUnidadMedidaNombreEdit.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite el el nombre de la unidad de medida");
            txtUnidadMedidaNombreEdit.requestFocus();
            return;
        }
        
        if(txtNombreEdit.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite el nombre");
            txtNombreEdit.requestFocus();
            return;
        }
        
        if(txtCantidadInventarioEdit.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite la cantidad en inventario");
            txtCantidadInventarioEdit.requestFocus();
            return;
        }
        
        if(txtCantidadMinimaEdit.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "Digite la cantidad mínima");
            txtCantidadMinimaEdit.requestFocus();
            return;
        }

        Ingrediente ingrediente = new Ingrediente();

        ingrediente.setIdUnidadMedida(txtIdUnidadMedidaEdit.getText().trim());
        ingrediente.setUnidadMedidaNombre(txtUnidadMedidaNombreEdit.getText().trim());
        ingrediente.setNombre(txtNombreEdit.getText().trim());
        ingrediente.setCantidadInventario(Integer.parseInt(txtCantidadInventarioEdit.getText().trim()));
        ingrediente.setCantidadMinima(Integer.parseInt( txtCantidadMinimaEdit.getText().trim()));
       
        int opt = JOptionPane.showConfirmDialog(null, "¿Desea actualizar el ingrediente?", "Confirmar salida",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (opt == 0) {
            try {
                ingredienteController.actualizarIngrediente(Integer.parseInt(txtIdIngrediente.getText()), ingrediente);

                txtIdIngrediente.setText("");
                txtIdUnidadMedidaEdit.setText("");
                txtUnidadMedidaNombreEdit.setText("");                
                txtNombreEdit.setText("");
                txtCantidadInventarioEdit.setText("");
                txtCantidadMinimaEdit.setText("");

                listIngredientes();

                JOptionPane.showMessageDialog(null, "Ingrediente actualizado correctamente");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "No se pudo actualizar el ingrediente");
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtUnidadMedidaNombreEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnidadMedidaNombreEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnidadMedidaNombreEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        if (txtIdIngrediente.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un ingrediente de la lista");
            txtIdIngrediente.requestFocus();
            return;
        }

        int opt = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el ingrediente?", "Confirmar salida",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (opt == 0) {
            try {
                ingredienteController.eliminarIngrediente(Integer.parseInt(txtIdIngrediente.getText()));

                txtIdIngrediente.setText("");
                txtIdUnidadMedidaEdit.setText("");
                txtUnidadMedidaNombreEdit.setText("");                
                txtNombreEdit.setText("");
                txtCantidadInventarioEdit.setText("");
                txtCantidadMinimaEdit.setText("");

                listIngredientes();

                JOptionPane.showMessageDialog(null, "Ingrediente eliminado correctamente");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "No se pudo eliminar el ingrediente");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<Ingrediente> cbxIngredientes;
    private javax.swing.JComboBox<UnidadMedida> cbxUnidadMedida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblIngredientes;
    private javax.swing.JTextField txtCantidadInventario;
    private javax.swing.JTextField txtCantidadInventarioEdit;
    private javax.swing.JTextField txtCantidadMinima;
    private javax.swing.JTextField txtCantidadMinimaEdit;
    private javax.swing.JTextField txtIdIngrediente;
    private javax.swing.JTextField txtIdUnidadMedidaEdit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreEdit;
    private javax.swing.JTextField txtUnidadMedidaNombreEdit;
    // End of variables declaration//GEN-END:variables
}
